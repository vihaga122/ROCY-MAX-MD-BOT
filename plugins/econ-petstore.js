let handler = async (m, { conn, command, args }) => {
  let type = (args[0] || '').toLowerCase()
  let user = global.db.data.users[m.sender]
  let htki = '‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì„Äé'
  let htka = '„Äè‚Äì‚Äì‚Äì‚Äì‚Äì‚Äì'
  
  //----------HARGA
  let hdog = 2
  let hcat = 2
  let hhorse = 4
  let hfox = 6
  let hpetfood = 950

  let caption = `
üêà ‚Ä¢ *·¥Ñ·¥Ä·¥õ:* 
‚ûû ${hcat} ·¥ò·¥á·¥õ ·¥õ·¥è·¥ã·¥á…¥üîñ
üêï ‚Ä¢ *·¥Ö·¥è…¢:*
‚ûû ${hdog} ·¥ò·¥á·¥õ ·¥õ·¥è·¥ã·¥á…¥üîñ
üêé ‚Ä¢ * ú·¥è Äs·¥á:* 
‚ûû ${hhorse} ·¥ò·¥á·¥õ ·¥õ·¥è·¥ã·¥á…¥üîñ
ü¶ä ‚Ä¢ *“ì·¥èx:* 
‚ûû ${hfox} ·¥ò·¥á·¥õ ·¥õ·¥è·¥ã·¥á…¥üîñ
üçñ ‚Ä¢ *·¥ò·¥á·¥õ “ì·¥è·¥è·¥Ö:*
‚ûû ${hpetfood} ·¥ç·¥è…¥·¥á è üíπ
- - - - - - - - - - - - - - - - - - - - -
${htki} ABILITY ${htka}
‚ûû üêà ‚Ä¢ ·¥Ñ·¥Ä·¥õ :
- …™…¥·¥Ñ Ä·¥á·¥Äs·¥á  ú·¥á·¥Ä ü·¥õ ú 5% /  ü·¥á·¥†·¥á ü ·¥° ú·¥á…¥ ·¥ús·¥á *. ú·¥á·¥Ä ü*
‚ûû üêï ‚Ä¢ ·¥Ö·¥è…¢ :
- ·¥Ñ·¥è·¥ç…™…¥…¢ s·¥è·¥è…¥...
‚ûû üêé ‚Ä¢  ú·¥è Äs·¥á :
- ·¥Ñ·¥è·¥ç…™…¥…¢ s·¥è·¥è…¥...
‚ûû ü¶ä ‚Ä¢ “ì·¥èx :
- ·¥Ñ·¥è·¥ç…™…¥…¢ s·¥è·¥è…¥...
`

  try {
    if (/petshop/i.test(command)) {
      switch (type) {
        case 'cat':
          if (user.cat > 0) return m.reply(' è·¥è·¥ú ·¥Ä ü Ä·¥á·¥Ä·¥Ö è  ú·¥Ä·¥†·¥á …™·¥õ!')
          if (user.pet < hcat) return m.reply(` è·¥è·¥ú Ä ·¥ò·¥á·¥õ ·¥õ·¥è·¥ã·¥á…¥ …¥·¥è·¥õ ·¥á…¥·¥è·¥ú…¢ ú !`)
          global.db.data.users[m.sender].pet -= hcat
          global.db.data.users[m.sender].cat += 1
          conn.sendMessage(m.chat, { text: `*${htki} NEW PET !${htka}*\n\nüéâ Congratulations, you have purchased pet *cat*`, quoted: m })
          break
        case 'dog':
          if (user.dog > 0) return m.reply(' è·¥è·¥ú ·¥Ä ü Ä·¥á·¥Ä·¥Ö è  ú·¥Ä·¥†·¥á …™·¥õ!')
          if (user.pet < hdog) return m.reply(` è·¥è·¥ú Ä ·¥ò·¥á·¥õ ·¥õ·¥è·¥ã·¥á…¥ …¥·¥è·¥õ ·¥á…¥·¥è·¥ú…¢ ú !`)
          global.db.data.users[m.sender].pet -= hdog
          global.db.data.users[m.sender].dog += 1
          conn.sendMessage(m.chat, { text: `*${htki} NEW PET !${htka}*\n\nüéâ Congratulations, you have purchased pet *dog*`, quoted: m })
          break
        case 'fox':
          if (user.fox > 0) return m.reply(' è·¥è·¥ú ·¥Ä ü Ä·¥á·¥Ä·¥Ö è  ú·¥Ä·¥†·¥á …™·¥õ!')
          if (user.pet < hfox) return m.reply(` è·¥è·¥ú Ä ·¥ò·¥á·¥õ ·¥õ·¥è·¥ã·¥á…¥ …¥·¥è·¥õ ·¥á…¥·¥è·¥ú…¢ ú !`)
          global.db.data.users[m.sender].pet -= hfox
          global.db.data.users[m.sender].fox += 1
          conn.sendMessage(m.chat, { text: `*${htki} NEW PET !${htka}*\n\nüéâ Congratulations, you have purchased pet *fox*`, quoted: m })
          break
        case 'horse':
          if (user.horse > 0) return m.reply(' è·¥è·¥ú ·¥Ä ü Ä·¥á·¥Ä·¥Ö è  ú·¥Ä·¥†·¥á …™·¥õ!')
          if (user.pet < hhorse) return m.reply(` è·¥è·¥ú Ä ·¥ò·¥á·¥õ ·¥õ·¥è·¥ã·¥á…¥ …¥·¥è·¥õ ·¥á…¥·¥è·¥ú…¢ ú !`)
          global.db.data.users[m.sender].pet -= hhorse
          global.db.data.users[m.sender].horse += 1
          conn.sendMessage(m.chat, { text: `*${htki} NEW PET !${htka}*\n\nüéâ Congratulations, you have purchased pet *horse*`, quoted: m })
          break
        case 'petfood':
          if (global.db.data.users[m.sender].money >= hpetfood) {
            global.db.data.users[m.sender].petFood += 1
            global.db.data.users[m.sender].money -= hpetfood
            conn.sendMessage(m.chat, { text: `*${htki} BUYING ${htka}*\n\nSuccessful purchase of *1* pet food for *${hpetfood}* money!`, quoted: m })
          } else {
            conn.sendMessage(m.chat, { text: `Your money is not enough to buy pet food!`, quoted: m })
          }
          break
        default:
          conn.sendMessage(m.chat, { text: `*${htki} PET SHOP ${htka}*\n\n${caption}` }, { quoted: m })
          break
      }
    }
  } catch (err) {
    m.reply("Error\n\n\n" + err.stack)
  }
}

handler.help = ['petshop']
handler.tags = ['rpg']
handler.command = /^(petshop)/i

export default handler
